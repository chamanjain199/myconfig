spring.application.name=movieRate

server.port=8082

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/movie_rate
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true

#spring.jpa.hibernate.ddl-auto=create

#spring.liquibase.enabled=false

spring.liquibase.change-log=classpath:db/db.changelog-master.xml
springdoc.api-docs.path=/api-docs


#Eureka
eureka.client.service-url.defaultZone = http://${EUREKA_HOST:localhost}:8761/eureka/
eureka.instance.metadataMap.zone = zone1
eureka.client.preferSameZoneEureka = true
eureka.client.healthcheck.enabled = true
eureka.instance.prefer-ip-address = true

spring.cloud.openfeign.circuitbreaker.enabled=true
spring.cloud.openfeign.client.config.default.connectTimeout= 1000
spring.cloud.openfeign.client.config.default.readTimeout= 1000
spring.cloud.openfeign.client.config.default.retryer= com.example.movie.rate.config.MyRetryer


       

#Actuator
management.endpoints.web.exposure.include=*
management.info.env.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.tracing.sampling.probability=1.0
management.observations.key-values.application=movie_rate

spring.kafka.producer.bootstrap-servers = localhost:9094
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
